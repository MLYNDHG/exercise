1.java多线程模拟实现12306售票

业务描述
	假设有200张票，用4个线程去订票，不能有两个或者以上的线程订到了
	同一个票（原因就不说了），当最后一张票卖掉的时候结束，再订就抛
	异常提示出票卖完了。

业务分析,要实现以上功能，

	1、需要创建一个车票类，初始化票，卖票的接口saleTicket()

	2、自定义异常的一个类。

	3、创建卖票线程类，在run方法中卖车票。

	4、初始化车票的线程,负责初始化车票,也就是初始化Ticket类中的数组。

	5、创建主方法进行测试。


2.使用生产者和消费者模式实现，交替输出：
	假设只有两个线程，输出以下结果：
		t1-->1
		t2-->2
		t1-->3
		t2-->4
		t1-->5
		t2-->6
		....

		要求：必须交替，并且t1线程负责输出奇数。t2线程负责输出偶数。
		两个线程共享一个数字，每个线程执行时都要对这个数字进行：++

		public class Num {
			int i;
		}

		synchronized(num){
			if(num是奇数){
				num.wait();
			}
			// 输出偶数
			// notifyAll()
		}

		synchronized(num){
			if(num是偶数){
				num.wait();
			}
			// 输出奇数
			// notifyAll();
		}